name: RDP Access

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: self-hosted   # Apna Windows self-hosted runner use karein
    timeout-minutes: 3600

    steps:
      - name: Enable RDP
        run: |
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          # Allow firewall rule for RDP
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          # Restart RDP service
          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          $password = "YourStrongPassword123!"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          if (-not (Get-LocalUser -Name "RDP" -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
              Add-LocalGroupMember -Group "Administrators" -Member "RDP"
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          }
          echo "RDP_USERNAME=RDP" >> $env:GITHUB_ENV
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        shell: powershell
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          msiexec.exe /i "$installerPath" /quiet /norestart
          Remove-Item $installerPath -Force

      - name: Connect to Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-rdp-${{ github.run_id }}
          $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Show RDP Info
        run: |
          Write-Host "============================="
          Write-Host "âœ… RDP is enabled!"
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USERNAME"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host "============================="
          Write-Host "`nKeep this workflow running to maintain connection."
          while ($true) {
            Write-Host "[$(Get-Date)] RDP Active..."
            Start-Sleep -Seconds 300
          }
